name: Build

on:
  push:
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
    # branches:
    #   - master

jobs:

  createrelease:
    name: Create Release
    runs-on: [ubuntu-latest]
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Output Release URL File
      run: echo "${{ steps.create_release.outputs.upload_url }}" > release_url.txt
    - name: Save Release URL File for publish
      uses: actions/upload-artifact@v1
      with:
        name: release_url
        path: release_url.txt

  build:
    name: Build packages
    needs: createrelease
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: macos-latest
            TARGET: macos
            CMD_BUILD: npx pkg -t macos --public --config package.json server.js --output autodarts-extern-mac
            OUT_FILE_NAME: autodarts-extern-mac
            ASSET_MIME: application/octet-stream

          - os: ubuntu-latest
            TARGET: ubuntu
            CMD_BUILD: npx pkg -t linux --public --config package.json server.js --output autodarts-extern
            OUT_FILE_NAME: autodarts-extern
            ASSET_MIME: application/octet-stream

          - os: windows-latest
            TARGET: windows
            CMD_BUILD: npx pkg -t win --public --config package.json server.js
            OUT_FILE_NAME: autodarts-extern.exe
            ASSET_MIME: application/vnd.microsoft.portable-executable


    steps:
    - uses: actions/checkout@v1

    - name: Set up Node 16.13.1
      uses: actions/setup-node@v2
      with:
        node-version: 16.13.1

    - name: Install dependencies
      run: |
        npm install

    - name: Build with pkg for ${{matrix.TARGET}}
      run: ${{matrix.CMD_BUILD}}

    - name: Load Release URL File from release job
      uses: actions/download-artifact@v1
      with:
        name: release_url

    - name: Get Release File Name & Upload URL
      id: get_release_info
      shell: bash
      run: |
        value=`cat release_url/release_url.txt`
        echo ::set-output name=upload_url::$value

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.get_release_info.outputs.upload_url }}
        asset_path: ./${{ matrix.OUT_FILE_NAME}}
        asset_name: ${{ matrix.OUT_FILE_NAME}}
        asset_content_type: ${{ matrix.ASSET_MIME}}